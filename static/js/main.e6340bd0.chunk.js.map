{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","addTask","e","state","title","disc","date","level","status","todos","id","edit","counter","newTodos","map","el","inx","obj","Date","toLocaleString","push","setState","refs","modalka","style","display","preventDefault","$mod","document","querySelector","classList","remove","cssText","openAddTaskModal","click","openCard","checkCompleted","todo","filter","newArr","deteleTask","editTask","this","filterTodo","filterCompleted","className","onClick","type","ref","data-toggle","data-target","aria-hidden","length","key","aria-haspopup","aria-expanded","aria-labelledby","data-id","role","data-dismiss","aria-label","onSubmit","onChange","event","target","value","required","checked","name","ButtonToolbar","Button","variant","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6340bd0.chunk.js","sourcesContent":["import React from 'react';\nimport {ButtonToolbar} from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nimport './App.css';\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    \n    this.state = {\n      edit: false,\n      counter: 10,\n      title: '',\n      disc: '',\n      level: '',\n      id: '',\n      todos: [\n        { \n          title: \"Заголовок задания 1\",\n          level: \"High\",\n          date: \"11:00 01.01.2010\",\n          disc: \"Сайт рыбатекст поможет дизайнеру, верстальщику, вебмастеру сгенерировать несколько абзацев более менее осмысленного текста рыбы на русском языке, а начинающему оратору отточить навык публичных выступлений в домашних условиях. При создании генератора мы использовали небезизвестный универсальный код речей. Текст генерируется абзацами случайным образом от двух до десяти предложений в абзаце, что позволяет сделать текст более привлекательным и живым для визуально-слухового восприятия.\",\n          status: false,\n          id: 1\n        },\n        { \n          title: \"Заголовок задания 2\",\n          level: \"Light\",\n          date: \"11:00 01.01.2020\",\n          disc: \"Сайт рыбатекст поможет дизайнеру, верстальщику, вебмастеру сгенерировать несколько абзацев более менее осмысленного текста рыбы на русском языке, а начинающему оратору отточить навык публичных выступлений в домашних условиях. При создании генератора мы использовали небезизвестный универсальный код речей. Текст генерируется абзацами случайным образом от двух до десяти предложений в абзаце, что позволяет сделать текст более привлекательным и живым для визуально-слухового восприятия.\",\n          status: true,\n          id: 2\n        },\n        { \n          title: \"Заголовок задания 3\",\n          level: \"High\",\n          date: \"11:00 01.01.2030\",\n          disc: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci aliquid eaque eligendi error eveniet nostrum nulla pariatur repudiandae, veniam. Provident.\",\n          status: false,\n          id: 3\n        }\n      ]\n    } \n  }\n\n\n    addTask = (e) => {\n      let {title,disc,date,level,status,todos,id,edit,counter} = this.state;\n\n      if (edit) {\n\n        let newTodos = todos;\n        newTodos = newTodos.map((el,inx) => {\n           if (el.id === this.state.id) {\n            \n            newTodos[inx] = {\n              title,\n              level,\n              date,\n              disc,\n              status,\n              id,\n              date\n            }\n             return newTodos[inx];\n           } else {\n             return el\n           }\n        })\n      } else {\n   \n        let newTodos = todos;\n        let obj = {\n          title,\n          level,\n          date: new Date().toLocaleString(),\n          disc,\n          status,\n          id: counter + 1\n        }\n        \n      newTodos.push(obj)\n\n      this.setState({\n        todos: newTodos,\n        counter: counter + 1,\n        title: '',\n        disc: '',\n        level: '',\n      })\n    }\n\n    // localStorage.setItem('todo', JSON.stringify(todos));\n \n      let modalka = this.refs.modalka;\n      modalka.style.display = 'none';\n      e.preventDefault();\n      let $mod = document.querySelector('.modal-backdrop');\n      $mod.classList.remove('show');\n      $mod.style.cssText = \"display: none\";\n\n      let $btn = this.refs.openAddTaskModal;\n      $btn.click(); \n  }\n\n    openCard = () => {\n\n      this.setState({\n        title: '',\n        disc: '',\n        level: '',\n        edit: false\n      })\n \n    }\n\n    // componentDidMount = () => {\n    //   if (localStorage.getItem('todo') !== undefined && localStorage.getItem('todo') !== null) {\n    //     let list = JSON.parse(localStorage.getItem('todo'))\n    //     this.setState({\n    //       todos: list\n    //     })\n    //   }\n    // }\n\n    checkCompleted = (id) => {\n      let {todos} = this.state;\n      let todo = todos.filter(el => el.id === id)\n      let newArr = todos.filter(el => el.id !== id)\n      todo[0].status = true;\n      newArr.push(todo[0]);\n\n      this.setState({\n        todos: newArr\n      })\n      // localStorage.setItem('todo', JSON.stringify(todos));\n    }\n\n    deteleTask = (id) => {\n      let {todos} = this.state;\n      let newArr = todos.filter(el => el.id !== id)\n      this.setState({\n        todos: newArr\n      })\n      // localStorage.setItem('todo', JSON.stringify(todos));\n    }\n\n\n    editTask = (id) => {\n      let {todos} = this.state;\n      let $btn = this.refs.openAddTaskModal;\n      $btn.click();\n      let newArr = todos.filter(el => el.id === id)\n      \n      this.setState({\n        title: newArr[0].title,\n        disc: newArr[0].disc,\n        level: newArr[0].level,\n        edit: true,\n        id: newArr[0].id,\n        date: newArr[0].date\n      })\n\n    }\n\n  \n  render(){\n    let {todos} = this.state;\n    let filterTodo = todos.filter(el => {\n      if (el.status !== true) {\n        return el;\n      } \n    })\n\n    let filterCompleted = todos.filter(el => {\n      if (el.status === true) {\n        return el;\n      }\n    })\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"container-fluid\">\n          <div className=\"row alert alert-secondary\">\n            <div className=\"col\"><h1>Todo</h1></div>\n            <div className=\"col\"><button \n             onClick={this.openCard}\n             type=\"button\" className=\"btn btn-primary modalTask\" ref=\"openAddTaskModal\" data-toggle=\"modal\" data-target=\"#exampleModal\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add task</button></div>\n          </div> \n          <div className=\"row justify-content-center\">\n            <div className=\"col-10\">\n              <h1>ToDo({filterTodo.length})</h1>\n                <ul className=\"ulTodo\">\n\n                  {\n                      filterTodo.map(el => {\n                        return(\n                          <li className=\"d-flex list-group-item\" key={el.id}>\n                          <div className=\"task-content w-100 mr-2\">\n                            <div className=\"d-flex w-100 justify-content-between\">\n                              <h5>{el.title}</h5>\n                              <div>\n                                <small>{el.level} priority&#160;</small>\n                                <small>{el.date}</small>\n                              </div>\n                            </div>\n                          <div>{ el.disc}</div>\n                          </div>\n                          <div className=\"task-btn\">\n                            <div className=\"dropdown\">\n                              <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i className=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i>\n                              </button>\n                              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" data-id={el.id}>\n                                <button \n                                onClick={() => this.checkCompleted(el.id)}\n                                type=\"button\"  className=\"btn btn-success w-100\">Complete</button>\n                                <button \n                                onClick={() => this.editTask(el.id)}\n                                type=\"button\" className=\"btn btn-info w-100\">Edit</button>\n                                <button \n                                onClick={() => this.deteleTask(el.id)}\n                                type=\"button\" className=\"btn btn-danger w-100\">Delete</button>\n                              </div>\n                            </div>\n                          </div>\n                        </li>\n                        )\n                        \n                      })\n                  }\n\n            \n                </ul>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row justify-content-center\">\n              <div className=\"col-10\">\n                <h1>Completed({filterCompleted.length})</h1>\n                  <ul>\n                  {\n                      filterCompleted.map(el => {\n                        return(\n                          <li className=\"d-flex list-group-item\" key={el.id}>\n                          <div className=\"task-content w-100 mr-2\">\n                            <div className=\"d-flex w-100 justify-content-between\">\n                              <h5>{el.title}</h5>\n                              <div>\n                                <small>{el.level} priority&#160;</small>\n                                <small>{el.date}</small>\n                              </div>\n                            </div>\n                          <div>{ el.disc}</div>\n                          </div>\n                          <div className=\"task-btn\">\n                            <div className=\"dropdown\">\n                              <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i className=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i>\n                              </button>\n                              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                <button \n                                onClick={() => this.deteleTask(el.id)}\n                                type=\"button\" className=\"btn btn-danger w-100\">Delete</button>\n                              </div>\n                            </div>\n                          </div>\n                        </li>\n                        )\n                        \n                      })\n                  }\n                  </ul>\n              </div>\n            </div>\n        </div>\n      </main>\n      <div className=\"modal fade\" id=\"exampleModal\" ref=\"modalka\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add task</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <form className=\"form\" onSubmit={this.addTask}>\n            <div className=\"form-group row\">\n              <label  className=\"col-sm-2 col-form-label\">Title:</label>\n              <div className=\"col-sm-10\">\n                <input \n                onChange={(event) => this.setState({title: event.target.value})}\n                value={this.state.title}\n                type=\"text\" className=\"form-control title\" id=\"recipient-name1\" required />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\">Text:</label>\n              <div className=\"col-sm-10\">\n                <input \n                onChange={(event) => this.setState({disc: event.target.value})}\n                value={this.state.disc}\n                type=\"text\" className=\"form-control text\" id=\"recipient-name2\" required />\n              </div>\n            </div>\n            <fieldset className=\"form-group\">\n              <div className=\"row\">\n                  <legend className=\"col-form-label col-sm-2 pt-0\">Priority</legend>\n                  <div className=\"col-sm-10\">\n                      <div className=\"form-check\">\n                      <label className=\"form-check-label\">\n                          Low\n                          <input \n                          checked={this.state.level === 'Low'} onChange={(e) => this.setState({ level: e.target.value })}\n                          className=\"form-check-input level\" type=\"radio\" name=\"gridRadios\" id=\"Low\" value=\"Low\" required />\n                          </label>\n                      </div>\n                      <div className=\"form-check\">\n                      <label className=\"form-check-label\">\n                          Medium\n                          <input \n                          checked={this.state.level === 'Medium'} onChange={(e) => this.setState({ level: e.target.value })}\n                          className=\"form-check-input level\" type=\"radio\" name=\"gridRadios\" id=\"Medium\" value=\"Medium\" />\n                          </label>\n                      </div>\n                      <div className=\"form-check disabled\">\n                      <label className=\"form-check-label\">\n                          High\n                          <input \n                          checked={this.state.level === 'High'} onChange={(e) => this.setState({ level: e.target.value })}\n                          className=\"form-check-input level\" type=\"radio\" name=\"gridRadios\" id=\"High\" value=\"High\" />\n                          </label>\n                      </div>\n                  </div>\n              </div>\n          </fieldset>\n            <div className=\"modal-footer\">\n              <div className=\"col-sm-12 text-center\">\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                  { this.state.edit ? <ButtonToolbar><Button variant=\"success\" type=\"submit\">Success</Button></ButtonToolbar> : <button type=\"submit\" className=\"btn btn-primary btn-addTask\">Send message</button>}\n            </div>\n          </div>\n          </form>\n        </div>\n\n      </div>\n    </div>\n  </div>\n    </div>\n  );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}